[package]
name = "screenpipe-vision"
version = { workspace = true }
authors = { workspace = true }
description = { workspace = true }
repository = { workspace = true }
license = { workspace = true }
edition = { workspace = true }


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Cross-platform screen capture
xcap = "0.0.10"

# threadpool
threadpool = "1.8.1"
num_cpus = "1.0"

# async
tokio = { workspace = true }

# Image processing
image = "0.25.0"

# OCR
# rusty-tesseract = "1.1.10"
rusty-tesseract = { git = "https://github.com/louis030195/rusty-tesseract.git", branch = "main" }
reqwest = { version = "0.11", features = ["json", "multipart"] }

# Dates
chrono = { version = "0.4.31", features = ["serde"] }

# Local Embeddings
candle = { workspace = true }
candle-nn = { workspace = true }
candle-transformers = { workspace = true }
tokenizers = { workspace = true }

lazy_static = "1.4.0"
base64 = "0.21.7"
anyhow = "1.0.86"
byteorder = "1.5.0"
hf-hub = "0.3.2"
rand = "0.8.5"

# Log
log = { workspace = true }

image-compare = "0.4.1"
strsim = "0.10.0"
clap = { version = "4.0", features = ["derive"] }
# tokio = { version = "1", features = ["full"] }

[dev-dependencies]
tempfile = "3.3.0"
criterion = { workspace = true }
assert_cmd = "2.0.14"
predicates = "3.1.0"
assert_fs = "1.1.1"

[[bin]]
name = "screenpipe-vision"
path = "src/bin/screenpipe-vision.rs"

[[bench]]
name = "vision_benchmark"
harness = false


[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.58", features = ["Graphics_Imaging", "Media_Ocr", "Storage", "Storage_Streams"] }

[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = "0.9.4"
core-graphics = "0.23.2"
objc = { version = "0.2.7", features = ["exception"] }
block = "0.1"
foreign-types-shared = "0.1"
cocoa-foundation = "0.1.2"



[build-dependencies]
cc = "1.0"